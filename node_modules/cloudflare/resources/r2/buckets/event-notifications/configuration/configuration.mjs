// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../../../resource.mjs";
import * as QueuesAPI from "./queues.mjs";
import { Queues, } from "./queues.mjs";
export class Configuration extends APIResource {
    constructor() {
        super(...arguments);
        this.queues = new QueuesAPI.Queues(this._client);
    }
    /**
     * List all event notification rules for a bucket.
     */
    get(bucketName, params, options) {
        const { account_id, jurisdiction } = params;
        return this._client.get(`/accounts/${account_id}/event_notifications/r2/${bucketName}/configuration`, {
            ...options,
            headers: {
                ...(jurisdiction?.toString() != null ?
                    { 'cf-r2-jurisdiction': jurisdiction?.toString() }
                    : undefined),
                ...options?.headers,
            },
        })._thenUnwrap((obj) => obj.result);
    }
}
Configuration.Queues = Queues;
//# sourceMappingURL=configuration.mjs.map