import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
export declare class Searches extends APIResource {
    /**
     * Search for Load Balancing resources.
     */
    get(params: SearchGetParams, options?: Core.RequestOptions): Core.APIPromise<SearchGetResponse>;
}
export interface SearchGetResponse {
    /**
     * A list of resources matching the search query.
     */
    resources?: Array<SearchGetResponse.Resource>;
}
export declare namespace SearchGetResponse {
    /**
     * A reference to a load balancer resource.
     */
    interface Resource {
        /**
         * When listed as a reference, the type (direction) of the reference.
         */
        reference_type?: 'referral' | 'referrer';
        /**
         * A list of references to (referrer) or from (referral) this resource.
         */
        references?: Array<unknown>;
        resource_id?: string;
        /**
         * The human-identifiable name of the resource.
         */
        resource_name?: string;
        /**
         * The type of the resource.
         */
        resource_type?: 'load_balancer' | 'monitor' | 'pool';
    }
}
export interface SearchGetParams {
    /**
     * Path param: Identifier
     */
    account_id: string;
    /**
     * Query param:
     */
    page?: number;
    /**
     * Query param:
     */
    per_page?: number;
    /**
     * Query param:
     */
    search_params?: SearchGetParams.SearchParams;
}
export declare namespace SearchGetParams {
    interface SearchParams {
        /**
         * Search query term.
         */
        query?: string;
        /**
         * The type of references to include ("\*" for all).
         */
        references?: '' | '*' | 'referral' | 'referrer';
    }
}
export declare namespace Searches {
    export { type SearchGetResponse as SearchGetResponse, type SearchGetParams as SearchGetParams };
}
//# sourceMappingURL=searches.d.ts.map