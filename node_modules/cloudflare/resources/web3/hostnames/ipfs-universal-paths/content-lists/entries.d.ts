import { APIResource } from "../../../../../resource.js";
import * as Core from "../../../../../core.js";
export declare class Entries extends APIResource {
    /**
     * Create IPFS Universal Path Gateway Content List Entry
     */
    create(identifier: string, params: EntryCreateParams, options?: Core.RequestOptions): Core.APIPromise<EntryCreateResponse>;
    /**
     * Edit IPFS Universal Path Gateway Content List Entry
     */
    update(identifier: string, contentListEntryIdentifier: string, params: EntryUpdateParams, options?: Core.RequestOptions): Core.APIPromise<EntryUpdateResponse>;
    /**
     * List IPFS Universal Path Gateway Content List Entries
     */
    list(identifier: string, params: EntryListParams, options?: Core.RequestOptions): Core.APIPromise<EntryListResponse | null>;
    /**
     * Delete IPFS Universal Path Gateway Content List Entry
     */
    delete(identifier: string, contentListEntryIdentifier: string, params: EntryDeleteParams, options?: Core.RequestOptions): Core.APIPromise<EntryDeleteResponse | null>;
    /**
     * IPFS Universal Path Gateway Content List Entry Details
     */
    get(identifier: string, contentListEntryIdentifier: string, params: EntryGetParams, options?: Core.RequestOptions): Core.APIPromise<EntryGetResponse>;
}
/**
 * Content list entry to be blocked.
 */
export interface EntryCreateResponse {
    /**
     * Identifier
     */
    id?: string;
    /**
     * CID or content path of content to block.
     */
    content?: string;
    created_on?: string;
    /**
     * An optional description of the content list entry.
     */
    description?: string;
    modified_on?: string;
    /**
     * Type of content list entry to block.
     */
    type?: 'cid' | 'content_path';
}
/**
 * Content list entry to be blocked.
 */
export interface EntryUpdateResponse {
    /**
     * Identifier
     */
    id?: string;
    /**
     * CID or content path of content to block.
     */
    content?: string;
    created_on?: string;
    /**
     * An optional description of the content list entry.
     */
    description?: string;
    modified_on?: string;
    /**
     * Type of content list entry to block.
     */
    type?: 'cid' | 'content_path';
}
export interface EntryListResponse {
    /**
     * Content list entries.
     */
    entries?: Array<EntryListResponse.Entry>;
}
export declare namespace EntryListResponse {
    /**
     * Content list entry to be blocked.
     */
    interface Entry {
        /**
         * Identifier
         */
        id?: string;
        /**
         * CID or content path of content to block.
         */
        content?: string;
        created_on?: string;
        /**
         * An optional description of the content list entry.
         */
        description?: string;
        modified_on?: string;
        /**
         * Type of content list entry to block.
         */
        type?: 'cid' | 'content_path';
    }
}
export interface EntryDeleteResponse {
    /**
     * Identifier
     */
    id: string;
}
/**
 * Content list entry to be blocked.
 */
export interface EntryGetResponse {
    /**
     * Identifier
     */
    id?: string;
    /**
     * CID or content path of content to block.
     */
    content?: string;
    created_on?: string;
    /**
     * An optional description of the content list entry.
     */
    description?: string;
    modified_on?: string;
    /**
     * Type of content list entry to block.
     */
    type?: 'cid' | 'content_path';
}
export interface EntryCreateParams {
    /**
     * Path param: Identifier
     */
    zone_id: string;
    /**
     * Body param: CID or content path of content to block.
     */
    content: string;
    /**
     * Body param: Type of content list entry to block.
     */
    type: 'cid' | 'content_path';
    /**
     * Body param: An optional description of the content list entry.
     */
    description?: string;
}
export interface EntryUpdateParams {
    /**
     * Path param: Identifier
     */
    zone_id: string;
    /**
     * Body param: CID or content path of content to block.
     */
    content: string;
    /**
     * Body param: Type of content list entry to block.
     */
    type: 'cid' | 'content_path';
    /**
     * Body param: An optional description of the content list entry.
     */
    description?: string;
}
export interface EntryListParams {
    /**
     * Identifier
     */
    zone_id: string;
}
export interface EntryDeleteParams {
    /**
     * Identifier
     */
    zone_id: string;
}
export interface EntryGetParams {
    /**
     * Identifier
     */
    zone_id: string;
}
export declare namespace Entries {
    export { type EntryCreateResponse as EntryCreateResponse, type EntryUpdateResponse as EntryUpdateResponse, type EntryListResponse as EntryListResponse, type EntryDeleteResponse as EntryDeleteResponse, type EntryGetResponse as EntryGetResponse, type EntryCreateParams as EntryCreateParams, type EntryUpdateParams as EntryUpdateParams, type EntryListParams as EntryListParams, type EntryDeleteParams as EntryDeleteParams, type EntryGetParams as EntryGetParams, };
}
//# sourceMappingURL=entries.d.ts.map