import { APIResource } from "../../../../../resource.js";
import * as Core from "../../../../../core.js";
import * as PoliciesAPI from "../policies.js";
export declare class Includes extends APIResource {
    /**
     * Sets the list of routes included in the WARP client's tunnel.
     */
    update(params: IncludeUpdateParams, options?: Core.RequestOptions): Core.APIPromise<IncludeUpdateResponse | null>;
    /**
     * Fetches the list of routes included in the WARP client's tunnel.
     */
    get(params: IncludeGetParams, options?: Core.RequestOptions): Core.APIPromise<IncludeGetResponse | null>;
}
export type IncludeUpdateResponse = Array<PoliciesAPI.SplitTunnelInclude>;
export type IncludeGetResponse = Array<PoliciesAPI.SplitTunnelInclude>;
export interface IncludeUpdateParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Body param:
     */
    body: Array<PoliciesAPI.SplitTunnelIncludeParam>;
}
export interface IncludeGetParams {
    account_id: string;
}
export declare namespace Includes {
    export { type IncludeUpdateResponse as IncludeUpdateResponse, type IncludeGetResponse as IncludeGetResponse, type IncludeUpdateParams as IncludeUpdateParams, type IncludeGetParams as IncludeGetParams, };
}
//# sourceMappingURL=includes.d.ts.map