// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
export class Rules extends APIResource {
    /**
     * Only available for the Waiting Room Advanced subscription. Creates a rule for a
     * waiting room.
     */
    create(waitingRoomId, params, options) {
        const { zone_id, rules } = params;
        return this._client.post(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}/rules`, {
            body: rules,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Only available for the Waiting Room Advanced subscription. Replaces all rules
     * for a waiting room.
     */
    update(waitingRoomId, params, options) {
        const { zone_id, rules } = params;
        return this._client.put(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}/rules`, {
            body: rules,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Deletes a rule for a waiting room.
     */
    delete(waitingRoomId, ruleId, params, options) {
        const { zone_id } = params;
        return this._client.delete(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}/rules/${ruleId}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Patches a rule for a waiting room.
     */
    edit(waitingRoomId, ruleId, params, options) {
        const { zone_id, ...body } = params;
        return this._client.patch(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}/rules/${ruleId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Lists rules for a waiting room.
     */
    get(waitingRoomId, params, options) {
        const { zone_id } = params;
        return this._client.get(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}/rules`, options)._thenUnwrap((obj) => obj.result);
    }
}
//# sourceMappingURL=rules.mjs.map